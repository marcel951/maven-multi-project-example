<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>MavenReactorModule2</artifactId>
    <version>1.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    
    <name>MavenReactorModule2</name>

    <inceptionYear>2014</inceptionYear>
    <url>www.blogging-it.com</url>
    
    <developers>
        <developer>
            <name>Markus Eschenbach</name>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>MIT License</name>
            <distribution>manual</distribution>
            <comments>This content is released under the MIT License. See the license file for more informations</comments>
        </license>
    </licenses>
        
    <parent>
        <groupId>com.blogging-it</groupId>
        <artifactId>MavenReactor</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <!-- Set the relativePath attribute when module is not installed in a repository or module is not in a subfolder of the reactor project -->       
        <!-- <relativePath>../MavenReactor/pom.xml</relativePath> -->
    </parent> 
 
    <properties>
        <project.parent.dir>${project.parent.basedir}</project.parent.dir>
    </properties>
       
    <build>        
        <plugins>
            <!-- Use this plugin to add resource directories from reactor project http://mojo.codehaus.org/build-helper-maven-plugin/usage.html -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.8</version>
                <!-- for production it its better to configure the plugin in the reactor pom.xml -->
                <executions>
                    <!-- 
                         add additional source directories to the project
                         It works but it is not recommended - better use own dependency
                    -->
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.parent.dir}/src/main/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <!-- 
                        add additional test source directories to the project 
                        It works but it is not recommended - better use http://maven.apache.org/plugins/maven-remote-resources-plugin/
                    -->
                    <execution>
                        <id>add-resource</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.parent.dir}/src/main/resources</directory>
                                    <targetPath>resources</targetPath>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>   
                    <!-- add additional test source directories to the project -->
                    <execution>
                        <id>add-test-source</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.parent.dir}/src/test/java</source>
                            </sources>
                        </configuration>
                    </execution>                                
                </executions>
            </plugin>            
        </plugins>
    </build>    
</project>
